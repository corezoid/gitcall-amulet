# [REQUIRED]: object.
gitcall_amulet:
    # End-to-end functional test. Creates a code, builds it, deploys, send a test, validate result, remove code
    # Alternative settings:
    # 1#
    # enabled: null
    gitcall_features_tests:
        # [REQUIRED]: boolean.
        enabled: true
        rabbitmq_dundergitcall_vhost: ''
        rabbitmq_gitcall_vhost: ''
        rabbitmq_host: ''
        rabbitmq_password: ''
        rabbitmq_user: ''
    # In this section you can define allowed\denied endpoints for components: gitcall, pimp, docker registry etc.
    # The component adds 'helm test' that you can run at anytime or after deploy.
    # Works in conjunction with gitcall_network_policy component.
    # google.com is used to test access to Internet
    # Alternative settings:
    # 1#
    # enabled: null
    gitcall_network_policy_tests:
        docker_engine_allow: ['gitcall-docker-registry:443', 'google.com:443']
        docker_engine_deny: []
        docker_registry_allow: []
        docker_registry_deny: ['rabbitmq:5672', 'postgres:5432', 'google.com:443']
        # [REQUIRED]: boolean.
        enabled: true
        gitcall_allow: ['rabbitmq:5672', 'postgres:5432', 'gitcall-docker-engine:2375', 'gitcall-docker-registry:443', 'pimp-service:8080', 'github.com:443']
        gitcall_deny: []
        pimp_allow: ['10.96.0.1:443']
        pimp_deny: ['rabbitmq:5672', 'postgres:5432', 'google.com:443']
    # This section performs network policy tests. What usercode can access and what not.
    # Alternative settings:
    # 1#
    # enabled: null
    usercode_network_policy_tests:
        # [REQUIRED]: boolean.
        enabled: true
        rabbitmq_dundergitcall_vhost: ''
        rabbitmq_gitcall_vhost: ''
        rabbitmq_host: ''
        rabbitmq_password: ''
        rabbitmq_user: ''
